{
  "openapi" : "3.0.0",
  "info" : {
    "title" : "g-mail-relayer API",
    "version" : "1.0.0",
    "description" : "API description for email sending",
    "license" : {
      "name" : "Apache 2.0",
      "url" : "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "paths" : {
    "/mail/send" : {
      "post" : {
        "operationId" : "sendEmail",
        "summary" : "sends an email",
        "description" : "Sends an email with the specified data",
        "requestBody" : {
          "description" : "Email to be sent",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/EmailMessage"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "email sent",
            "content" : {
              "object" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SendEmailResult"
                }
              }
            }
          },
          "202" : {
            "description" : "email queued for later delivery",
            "content" : {
              "object" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SendEmailResult"
                }
              }
            }
          },
          "400" : {
            "description" : "invalid input",
            "content" : {
              "object" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorDetail"
                }
              }
            }
          },
          "401" : {
            "description" : "unauthorized",
            "content" : {
              "object" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorDetail"
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "SendEmailResult" : {
        "required" : [ "id", "result" ],
        "type" : "object",
        "properties" : {
          "result" : {
            "description" : "The result of the operation",
            "enum" : [ "QUEUED", "SENT", "NOK" ]
          },
          "id" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Internally assigned ID. Always set",
            "example" : 14
          },
          "messageId" : {
            "type" : "string",
            "description" : "Message-ID header of the sent message. Empty if the message was delayed.",
            "example" : "<032d19d1gd15$b9a14470$2si9dm40$@example.com>"
          },
          "date" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "Datetime of the message",
            "example" : "2015-03-17T10:30:45Z"
          }
        }
      },
      "ErrorDetail" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Machine-readable error code",
            "example" : "mail.send.error.general"
          },
          "description" : {
            "type" : "string",
            "description" : "Longer human-readable message",
            "example" : "Could not connect to host"
          },
          "params" : {
            "type" : "array",
            "description" : "List of values to complete the error code. Fully dependant on the error code",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "Header" : {
        "required" : [ "name", "value" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "maxLength" : 200,
            "description" : "Header name"
          },
          "value" : {
            "type" : "string",
            "maxLength" : 2000,
            "description" : "Header value"
          }
        }
      },
      "Attachment" : {
        "required" : [ "content", "filename" ],
        "type" : "object",
        "properties" : {
          "cid" : {
            "type" : "string",
            "maxLength" : 200,
            "description" : "Optional CID identificator for inline attachements. Setting a CID will force the attachment to be inlined. If you do not want the attachment to be inline, do not set the CID field."
          },
          "filename" : {
            "type" : "string",
            "maxLength" : 50,
            "description" : "Filename of the attachment",
            "example" : "photo-album.png"
          },
          "contentType" : {
            "type" : "string",
            "description" : "Optional content type",
            "example" : "image/png"
          },
          "content" : {
            "type" : "string",
            "format" : "byte",
            "maxLength" : 6291456,
            "description" : "Base64 attachment"
          }
        }
      },
      "EmailMessage" : {
        "description" : "The email message to be sent.",
        "required" : [ "to", "body", "textFormat", "textEncoding" ],
        "type" : "object",
        "properties" : {
          "from" : {
            "type" : "string",
            "format" : "email",
            "description" : "Set \"from\" adress. This may be ignored by other configurations which may override the \"from\" address.",
            "example" : "Aunt Doe <aunt.doe@example.com>"
          },
          "replyTo" : {
            "description" : "Optionally set \"replyTo\" address",
            "type" : "string",
            "format" : "email",
            "example" : "Uncle Doe <uncle.doe@example.com>"
          },
          "to" : {
            "description" : "Recipients of the message",
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "email",
              "example" : [ "john.doe@example.com", "John Doe <john.doe@example.com>" ]
            }
          },
          "cc" : {
            "type" : "array",
            "description" : "Carbon copy recipients",
            "items" : {
              "type" : "string",
              "format" : "email",
              "example" : [ "john.doe@example.com", "John Doe <john.doe@example.com>" ]
            }
          },
          "bcc" : {
            "type" : "array",
            "description" : "Blind copy recipients",
            "items" : {
              "type" : "string",
              "format" : "email",
              "example" : [ "john.doe@example.com", "John Doe <john.doe@example.com>" ]
            }
          },
          "subject" : {
            "type" : "string",
            "maxLength" : 255,
            "description" : "Subject of the message. Maximum length is 255, not only because that is the max lenght of a subject in MS Outlook, but because... hey, who wants to read an email with such a long subject, anyway? Not me.",
            "example" : "Hey John!"
          },
          "body" : {
            "type" : "string",
            "maxLength" : 50000,
            "description" : "Body of the message. Can be text or html. Format must be specified with the textFormat field, and encoding must be specified with the textEncoding field.",
            "example" : "<h1>Attention to this</h1><p>John, a nigerian prince wants to do business with you, lucky man!</p>"
          },
          "textFormat" : {
            "description" : "Format of the body message: plain text or html",
            "enum" : [ "TEXT", "HTML" ]
          },
          "textEncoding" : {
            "type" : "string",
            "description" : "Encoding of the message body.",
            "example" : "UTF-8"
          },
          "priority" : {
            "type" : "number",
            "minimum" : 1,
            "maximum" : 5,
            "description" : "Set priority of the message. X-Priority header is set with the value",
            "example" : "1"
          },
          "notBefore" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "Optionally delay message delivery until the time specified, as defined by date-time - RFC3339 (http://xml2rfc.ietf.org/public/rfc/html/rfc3339.html#anchor14). It is not guaranteed that the email will be sent exactly at this time, but at the first scheduled delivery time after this time. This option is ignored if deliveryType is set to other than QUEUE.",
            "example" : "2015-03-17T10:30:45Z"
          },
          "deliveryType" : {
            "description" : "Set the delivery type: PRIORITY_SYNC makes a synchronized inmediate sending of the message. The API does not return until the messaged is delivered (or tried to). PRIORITY_ASYNC makes an inmediate background sending. The API returns the ID of the message with QUEUED status but the message is sent inmediately in the background. QUEUE queues the message until the next scheduled batch processing of queued mails",
            "enum" : [ "PRIORITY_SYNC", "PRIORITY_ASYNC", "QUEUE" ]
          },
          "attachments" : {
            "type" : "array",
            "description" : "List of the message attachments",
            "items" : {
              "$ref" : "#/components/schemas/Attachment"
            }
          },
          "headers" : {
            "type" : "array",
            "description" : "List of the headers that should be added to the email",
            "items" : {
              "$ref" : "#/components/schemas/Header"
            }
          }
        }
      }
    }
  }
}